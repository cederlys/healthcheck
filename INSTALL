These are the steps needed to install Healthcheck on a pristine Ubuntu Server 10.04LTS machine:

* Install and configure the engine part of DNSCheck (ignore the web
  part). See http://github.com/dotse/dnscheck/

* Install the packages: libcrypt-openssl-random-perl libdbd-mysql-perl
  libdigest-bubblebabble-perl libio-socket-inet6-perl libmime-lite-perl
  libmail-rfc822-address-perl libnet-dns-perl libnet-dns-sec-perl
  libtext-template-perl libyaml-perl libconfig-any-perl libgeo-ip-perl
  libio-socket-ssl-perl libtext-csv-xs-perl couchdb libmodule-install-perl
  libjson-any-perl libfile-slurp-perl libfile-copy-recursive-perl
  libcatalyst-perl libcatalyst-modules-perl libtry-tiny-perl liburi-perl
  libwww-perl git-core

  The CouchDB version installed this way is ancient (0.10.0), but it should
  work. If you can arrange to install a more modern version, that is
  definitely a bonus. An easy way that I've found to work quite well is
  https://github.com/iriscouch/build-couchdb

* Clone git://github.com/dotse/healthcheck.git into a suitable
  directory, the checkout the couchdb branch.

* Clone the git repositories git://github.com/cdybedahl/CDBHelper.git and
  git://github.com/cdybedahl/couchdb-client.git

* Do "perl Makefile.PL && sudo make install" in each of the two repositories.

* Go to the healthcheck/Zonestat directory and do it there too.

* Install the perl module Catalyst::Plugin::Unicode::Encoding, either from
  CPAN directly or a debian-package built with dh-make-perl.

* Go to the healthcheck/Statweb directory. Run "perl Makefile.PL" and "make".
  Both should run without errors or complaints.

At this point, the software should be able to run properly. What
remains is configuration. This resides in the directory share/zonestat
in the directory that's set as the site prefix in Perl. You can see
what directory will be used by running the following at a command
line: 

   perl -MConfig -le 'print $Config{siteprefix} . "/share/zonestat"'

The configuration file will be loaded into a hash using the
Config::Any perl module, so it can be written in a variety of
different formats, like JSON, YAML or XML. It should be stored in a
file in the directory mentioned above, and the file should be named
"config" with a suffix matching its format. So if it's an XML file, it
should be "config.xml". The example config here is in JSON, so it
would be in a file called "config.json".

Example config, with explanatory comments:

{
    // Under this key are listed some programes and files needed for
    // the gathering process. 
   "zonestat" : {
       // If you want to use WhatWeb, set this to where the main script is
      "whatweb" : "/some/proper/path/WhatWeb/whatweb",
       // The following two keys are for a proprietary tool.
      "python" : "/opt/local/bin/python",
      "pageanalyzer" : "/some/proper/path/pageanalyzer",
       // The plain old OpenSSL binary
      "openssl" : "/opt/local/bin/openssl",
       // A file with root certs, used together with openssl to check
       // HTTPS certs.
      "cacertfile" : "/opt/local/share/dnscheck/cacerts.pem",
       // A tool to test SSL servers.
       // http://sourceforge.net/projects/sslscan/
      "sslscan" : "/some/proper/path/sslscan-win/sslscan"
   },
    // Connection information for the CouchDB instance to use. A
    // number of databases will be created, all with names starting
    // with "zonestat".
   "couchdb" : {
      "url" : "http://127.0.0.1:5984/",
      "password" : null,
      "username" : null
   },
    // If you use the functionality to import a zone via AXFR, this is
    // where to store the data on disk.
   "zone" : {
      "datafile" : "/var/tmp/se.zone"
   },
    // How should we log things?
   "syslog" : {
      "ident" : "zonestat",
      "facility" : "local2"
   },
    // Network-related information. Not all are used by Zonestat at
    // the moment.
   "net" : {
       // The following three are flags, true if we may use the relevant protocol.
      "ipv4" : "1",
      "ipv6" : "1",
      "smtp" : "1",
       // The following two should be lists of proper suffixes to look
       // up AS numbers for IP addresses via a Cymru-compatible DNS
       // database. See http://asn.cymru.com/
      "v6root" : [
         "origin6.asn.cymru.com"
      ],
      "v4root" : [
         "origin.asn.cymru.com"
      ]
   },
    // Settings for the dispatcher. 
   "daemon" : {
       // Where to stor the main process PID on startup.
      "pidfile" : "/var/tmp/zonestat_dispatcher.pid",
       // What user to change to after opening files, if started as root.
      "user" : "called",
       // Where is the GeoIP data file?
      "geoip" : "/opt/local/share/GeoIP/GeoLiteCity.dat",
       // Where to write error messages, if we can't send them to syslog for some reason
      "errorlog" : "/var/tmp/zonestat_errors.log",
       // Maximum number of concurrent gathering processes. How high
       // you can set this depends heavily on how many (and how heavy)
       // gathering tools you use (WhatWeb is the worst, for now), how
       // many writes per second your database server can take and how
       // much traffic the ISPs of the domains you're scanning will
       // accept before they blacklist you.
      "maxchild" : "20"
   }
}
